import os
from pathlib import Path

GDAL_LIBRARY_PATH = str(Path(r"C:\Users\Jolan\miniconda3\envs\prox_env\Library\bin\gdal.dll"))
os.environ['GDAL_DATA'] = r"C:\Users\Jolan\miniconda3\envs\prox_env\Library\share\gdal"



"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""






from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-zwxa3o_#)b1#h&lp=h3m)&i8o-t2=z(dl)k@g0$5brko+#ir-b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

X_FRAME_OPTIONS = 'SAMEORIGIN' # Allow iframing from the same origin


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',  
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'registerandlogin',
    'django.contrib.gis',
    'django_recaptcha',
    'userprofile',
    'rest_framework',
    'friendsearch',
    'chat',
    'moments',
    'events',
    'sitesettings',
    'notifications',
    'channels',
    'legal_pages',
]
RECAPTCHA_PUBLIC_KEY = '6LfUcwUrAAAAADgKPrsFKt5Z7Ej3_odnnf_qlidy'
RECAPTCHA_PRIVATE_KEY = '6LfUcwUrAAAAAOucBCfuxOEoOHh-4SzjVkoX5rBl'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

ASGI_APPLICATION = 'config.asgi.application' 

from celery.schedules import crontab


CELERY_BEAT_SCHEDULE = {
    'expire-moments-every-minute': {
        'task': 'moments.tasks.expire_old_moments',
        'schedule': crontab(),  # Every 1 minute
    },
    'decay-hot-moments-every-5-mins': {
        'task': 'moments.tasks.decay_moment_activity',
        'schedule': crontab(minute='*/5'),  # Every 5 minutes
    },
}
CELERY_BROKER_URL = 'redis://localhost:6379/0'


CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:8000",
    "http://localhost:8000",
]

# Optional: set a channel layer (for testing, use in-memory)
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    }
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
    BASE_DIR / 'templates',
    BASE_DIR / 'posts/templates',
    ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'notifications.views.base_context',
                'moments.context_processors.on_fire_moments_processor',  # Add this line
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'proximitylinked',
        'USER': 'postgres',
        'PASSWORD': 'Polan2523',  # <- Replace this
        'HOST': 'localhost',
        'PORT': '5432',
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTH_USER_MODEL = 'registerandlogin.CustomUser'

# Login/Logout URLs
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
    BASE_DIR / "friendsearch" / "static",
    BASE_DIR / "posts" / "static",  
    BASE_DIR / "userprofile" / "static",
    BASE_DIR / "registerandlogin" / "static",
    BASE_DIR / "chat" / "static", 
    BASE_DIR / "moments" / "static",
]
STATIC_ROOT = BASE_DIR / "staticfiles"


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Email configuration for account activation
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = 'noreplyproximitylinked@gmail.com'
EMAIL_HOST_PASSWORD = 'tziwvppzpsanefml'  # <-- zonder spaties

DEFAULT_FROM_EMAIL = 'ProximityLinked <noreplyproximitylinked@gmail.com>'
